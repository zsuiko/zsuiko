<!-- Bootstrap CSS -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />


üß± 1. Bootstrap ‚Äì Reszponz√≠v elrendez√©s √©s st√≠lus

Gyakori Bootstrap oszt√°lyok:
Oszt√°ly	        		Jelent√©s
container			K√∂zponti tartalomblokk, sz√©less√©gre igaz√≠tva
row	        		Sor a grid rendszerhez, benne lesznek az oszlopok
col-xs-12 col-md-6 col-lg-4	Mobilon teljes sz√©less√©g (12), Tableten f√©l (6), Nagy kijelz≈ën harmad (4) sz√©less√©g
g-4				Grid gap, vagyis t√©rk√∂z a sorban l√©v≈ë elemek k√∂z√∂tt
py-5				F√ºgg≈ëleges padding (top + bottom) 3rem √©rt√©kben
mb-4, mb-2, mb-1, mb-0		Margin-bottom, vagyis elem alatti t√©rk√∂z (sorban cs√∂kken≈ë √©rt√©kek)
text-center			Sz√∂veg k√∂z√©pre igaz√≠t√°sa
h-100				100% magass√°g (pl. a user-card mindig azonos m√©ret≈± lehet)

JavaScript ‚Äì Dinamikus adatlek√©r√©s √©s DOM-manipul√°ci√≥:
fetch("https://jsonplaceholder.typicode.com/users") ->
Lek√©ri az adatokat egy nyilv√°nos API-b√≥l (JSONPlaceholder), ami 10 felhaszn√°l√≥ adatait k√ºldi vissza JSON form√°tumban.


üîÅ then() √©s forEach():
Az adatok feldolgoz√°sa √©s DOM-ba helyez√©se:

users.forEach((user) => {
  const col = document.createElement("div");
  col.className = "col-xs-12 col-md-6 col-lg-4";

  col.innerHTML = `...`; // HTML sablon a felhaszn√°l√≥ adatainak
  userList.appendChild(col);
});

‚ùå catch():
Ha hiba van a lek√©r√©s sor√°n, megjelen√≠t√ºnk egy hiba√ºzenetet:

.catch((error) => {
  errorMessage.textContent = "Hiba t√∂rt√©nt az adatok bet√∂lt√©se k√∂zben: " + error.message;
});


HTML ‚Äì Alapszerkezet
Elem						Szerepe
<div class="container py-5">			A teljes tartalom j√≥l struktur√°lt kont√©nerbe helyez√©se
<h1 class="text-center">			C√≠msor, k√∂z√©pre igaz√≠tva
<div id="user-list" class="row g-4">		Ebbe ker√ºlnek a felhaszn√°l√≥k k√°rty√°i (oszlopk√©nt)
<div id="error-message" class="error"></div>	Hib√°k megjelen√≠t√©s√©re szolg√°l√≥ hely


üîç py-5 jelent√©se bont√°sban

1. p = padding
Ez a sz√≥ a bels≈ë marg√≥ra (bels≈ë t√©rk√∂zre) utal.

2. y = f√ºgg≈ëleges tengely (top + bottom)
A y azt jelenti, hogy fel√ºlre √©s alulra lesz alkalmazva a padding.

Ha csak t lenne (pl. pt-5), akkor csak top,
ha csak b, akkor csak bottom,
ha csak x, akkor bal √©s jobb oldal lenne √©rintett.

3. 5 = az √©rt√©k m√©rt√©ke Bootstrap sk√°la szerint
Bootstrap-ben az √©rt√©kek 0-t√≥l 5-ig terjednek, √©s ezek nem pixelben, hanem rem-alap√∫ egys√©gekben √©rtend≈ëk:

√ârt√©k	M√©ret (rem)	Kb. pixel
0	0rem		0 px
1	0.25rem		4 px
2	0.5rem		8 px
3	1rem		16 px
4	1.5rem		24 px
5	3rem		48 px


















pelda feladat:
<!DOCTYPE html>
<html lang="hu">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Felhaszn√°l√≥k - API Fetch & Bootstrap</title>
  <!-- Bootstrap CSS -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <style>
    body {
      background-color: #f8f9fa;
    }
    .user-card {
      background-color: #ffffff;
      border: 1px solid #dee2e6;
      border-radius: 0.5rem;
      padding: 1rem;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
      transition: transform 0.2s;
    }
    .user-card:hover {
      transform: scale(1.02);
    }
    .error {
      color: red;
      font-weight: bold;
      text-align: center;
      margin-top: 2rem;
    }
  </style>
</head>
<body>
  <div class="container py-5">
    <h1 class="text-center mb-4">Felhaszn√°l√≥k</h1>
    <div id="user-list" class="row g-4"></div>
    <div id="error-message" class="error"></div>
  </div>

  <script>
    const userList = document.getElementById("user-list");
    const errorMessage = document.getElementById("error-message");

    fetch("API_URL")
      .then((response) => {
        if (!response.ok) {
          throw new Error("H√°l√≥zati hiba: " + response.status);
        }
        return response.json();
      })
      .then((users) => {
        users.forEach((user) => {
          const col = document.createElement("div");
          col.className = "col-xs-12 col-md-6 col-lg-4";

          col.innerHTML = `
            <div class="user-card h-100">
              <h5 class="mb-2">${user.name}</h5>
              <p class="mb-1"><strong>Felhaszn√°l√≥n√©v:</strong> ${user.username}</p>
              <p class="mb-1"><strong>Email:</strong> ${user.email}</p>
              <p class="mb-1"><strong>V√°ros:</strong> ${user.address.city}</p>
              <p class="mb-1"><strong>Telefon:</strong> ${user.phone}</p>
              <p class="mb-0"><strong>C√©g:</strong> ${user.company.name}</p>
            </div>
          `;

          userList.appendChild(col);
        });
      })
      .catch((error) => {
        errorMessage.textContent = "Hiba t√∂rt√©nt az adatok bet√∂lt√©se k√∂zben: " + error.message;
      });
  </script>
</body>
</html>
